[
	{
		"name": "text",
		"description": "Text defines any utf-8 text in the document that does not comprise part of a valid control sequence.",
		"example": "This is just some normal text",
		"icon": "font"
	},
	{
		"name": "strong emphasised text",
		"description": "You can define strong emphasis by surrounding the text you want to markup with double-asterisks",
		"example": "This is normal. **This is strongly emphasised**",
		"may_contain": ["text","emphasised text","underlined text","deleted text", "inserted text","hyperlinks","inline code"],
		"icon": "bold"
	},
	{
		"name": "emphasised text",
		"description": "You can define emphasis by surrounding the text you want to markup with double-foreslashes",
		"example": "This is normal. //This is emphasised//",
		"may_contain": ["text","strong emphasised text","underlined text","deleted text", "inserted text","hyperlinks","inline code"],
		"icon": "italic"
	},
	{
		"name": "underlined text",
		"description": "You can define underlined text by surrounding the text you want to markup with double-underscores",
		"example": "This is normal. __This is underlined__",
		"may_contain": ["text","strong emphasised text","emphasised text","deleted text", "inserted text","hyperlinks","inline code"],
		"icon": "underline"
	},
	{
		"name": "deleted text",
		"description": "You can define deleted text by surrounding the text you want to markup with double-dashes",
		"example": "This is normal. --This is deleted--",
		"may_contain": ["text","strong emphasised text","underlined text","underlined text", "inserted text", "hyperlinks","inline code"],
		"icon": "strikethrough"
	},
	{
		"name": "inserted text",
		"description": "You can define inserted text by surrounding it with double-pluses",
		"example": "This is normal. ++This is inserted++",
		"may_contain": ["text","strong emphasised text","underlined text","underlined text","deleted text", "hyperlinks","inline code"],
		"icon": "plus"
	},
	{
		"name": "inline code",
		"description": "You can define inlime code text by surrounding the text you want to markup with double-backticks",
		"example": "This is normal. ``This is code``",
		"icon": "code"
	},
	{
		"name": "headings",
		"description": "Headings are defined by a sequence of hashes at the beginning of a new line followed by the text for the heading.<br><br>If not at the start of the input, there should be a clear blank line before the heading. A blank line must also follow.",
		"example": "# Heading 1\n\n## Heading 2\n\n### Heading 3\n\n#### Heading 4\n\n##### Heading 5\n\n###### Heading 6",
		"may_contain": ["text","strong emphasised text","emphasised text","underlined text","underlined text","hyperlinks","inline code"],
		"icon": "header"
	},
	{
		"name": "hyperlinks",
		"description": "Hyperlinks are defined simply by surrounding the url you wish to link to with double square braces. If you want to specify alt-text to display instead of the link itself you can do so by specifying it after a pipe character. <br><strong>Note:</strong> Obviously support of hyperlinks is limited to output formatters that make sense to support them (such as HTML). Other formats should simply show the text representation",
		"example": "[[http://github.com]] -> simple link to show 'http://github.com'\n\n[[http://github.com|Check out github]] -> to show 'Check out github'",
		"may_contain": ["text"],
		"icon": "link"
	},
	{
		"name": "media",
		"description": "A media item describes any piece of embedded media and is defined by surrounding with double curly braces (matched open and close).<br>By default, a media item will default to a simple image (which for example in HTML would parse to a vanilla &lt;img&gt; tag) though this behaviour can be overriden using optional modifiers.<br><br><strong>&lt;src&gt;</strong> should give the path to and name of the media in question. You may specify multiple urls here (for media where that makes sense such as videos where you want to supply multiple formats - where it doesn't makes sense [such as normal images] the extra urls will be ignored).<br><br><strong>&lt;alt text&gt;</strong> should give the text that should be displayed if the media cannot be displayed - e.g. if images are switched off in HTML or in general in an ASCII doc.<br><br><strong>&lt;options&gt;</strong> should give extra control options (such as desired positioning and size - see table below)<br><br><table class=\"table table-striped table-bordered\"><tr><td>&gt;&gt;</td><td>Format the image to the right (possibly float right in HTML)</td></tr><tr><td>&lt;&lt;</td><td>Format the image to the left (possibly left right in HTML)</td></tr><tr><td>&gt;&lt;</td><td>Format the image in the center</td></tr><tr><td>&lt;&gt;</td><td>Format the image to stretch and fit its container area (normally horizontal scale-to-fit)</td></tr><tr><td>Hyy</td><td>Define height yy for the image (units arbitrary at the moment)</td></tr><tr><td>Wxx</td><td>Define width xx for the image (units arbitrary at the moment)</td></tr><tr><td>\"TEXT\"</td><td>Define alt text / caption for the media item</td></tr></table>",
		"example": "{{panda.jpg}}\n{{panda.jpg|<options>}}\n\n{{/images/panda.jpg|>>,H100}}\n{{/images/panda.jpg|<<,W100,H100,\"A nice picture of a panda\"}}",
		"may_contain": ["text"],
		"icon": "photo"
	},
	{
		"name": "character escape",
		"description": "Escape a single character using a backslash before it. Use this method to easily turn control sequences into literal text",
		"example": "\\**thing\\** -> output literal **thing**",
		"may_contain": ["text"],
		"icon": "hashtag"
	},
	{
		"name": "block escape",
		"description": "For the times when you want to be able to escape a whole load of text without having to have backslahes all over the place, you can use double percent marks at either end.",
		"example": "%%Anything in here will appear literally%%",
		"may_contain": ["any"],
		"icon": "hashtag"
	},
	{
		"name": "section divider",
		"description": "Defined by two tilde characters at the start of a line, preceed by either the start of input or a blank line. Anything on the rest of the line will be ignored so you can stretch the line across the document for readability if you like.<br><br>A section divider denotes a break in the page that may or may not contain a visible element. For example it could just be an empty break or could be a horizontal rule",
		"example": "First section\n\n~~\n\nAnother section",
		"icon": "ellipsis-h"
	},
	{
		"name": "spacer",
		"description": "Like a line paragraph break but inserts a vertical spacer",
		"example": "This is some text\n^^\n^^\n^^\n^^\nSome more text spaced down",
		"icon": "arrow-up"
	},
	{
		"name": "line break",
		"description": "Define a line break using a newline character (defined as \\n not \\r\\n)",
		"example": "This is a line\nThen a newline",
		"icon": "chain-broken"
	},
	{
		"name": "paragraph break",
		"description": "Define a paragraph break using two or more newline charaters",
		"example": "This is a paragraph\n\nThen another\n\n\n\n\nThen another",
		"icon": "paragraph"
	},
	{
		"name": "list",
		"description": "<em>Caffeinated Markup</em> supports both unordered and ordered lists. To define a list item use a dash (unordered) or digit (ordered) to begin a line (preceeded by at least one space). Indent subsequent levels of list by further indenting each line.<br><br>A list is terminated by a double newline.",
		"example": "- item 1\n- item 2\n  - item 2.1\n- item 3\n\n1 item 1\n2 item 2\n3 item 3",
		"may_contain": ["text","strong emphasised text","emphasised text","underlined text","deleted text","hyperlinks","inline code"],
		"icon": "list"
	},
	{
		"name": "block quote",
		"description": "Defines a section of text quoted from another source. It is begun by a blank line, followed by a line containg two double quotes then a newline. It is finished with the two double quotes on a newline, followed by a blank line.\n\nOptionally you can include a footer which is defined by a double dash (--) on a newline.",
		"example": "Some text\"\"\n<quote>\n\"\"Then more text.",
		"may_contain": ["text","strong emphasised text", "emphasised text", "underlined text", "deleted text", "inserted text", "hyperlinks", "media", "headings"],
		"icon": "quote-left"
	},
	{
		"name": "grid",
		"description": "CML gives you the ability to easily define multi-column rows.<br><br><em><strong>Note</strong> these aren't the same as tables as they're purely for layout, not contextual tabular data. Rows are also designed to support flow rather than being static like tables.</em><br><br>To start a new row, use the == token (must be on a newline). Divide columns with a double dash -- token (must be on a newline). Finalise the row with another ==. The tokens may be elongated (i.e. may be more than just the two chars) for legibility in the source. Anything on the line after the initial == or -- will be ignored.<br><br>A row can contain any other CML markup except another row<br><br>Support of rows and columns is output formatter dependent as some formats wouldn't make sense to support them and some will change on context (e.g. in HTML, rows and columns may be responsive so when the screen reduces to a certain width, columns may become individual rows to maintain legibility).",
		"example": "==\nSingle column row\n==\n\n=========================================\nRow with elongated markup\n-----------------------------------------\nSecond column in the row\n=========================================\n\n== THIS WILL BE IGNORED\nFirst row\n-- THIS WILL BE IGNORED TOO\nSecond row\n==\n\n==\nCol 1\n--\nCol 2\n--\nCol 3\n==",
		"may_contain": ["text","strong emphasised text", "emphasised text", "underlined text", "deleted text", "inserted text", "hyperlinks", "media", "quote", "headings","table"],
		"icon": "th-large"
	},
	{
		"name": "table",
		"description": "Tabular data. Must be either at start of input or preceeded by a blank line. Header items are denoted by ^ and normal columns by | at the start of the cell.",
		"example": "^Header 1^Header 2^Header 3^\n|Col 1|Col 2|Col 3|\n|Col 1|Col 2|Col 3|\n",
		"may_contain": ["text", "strong emphasised text", "emphasised text", "underlined text", "deleted text", "inserted text", "hyperlinks"],
		"icon": "table"
	}

]
